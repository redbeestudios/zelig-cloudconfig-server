apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'
apply plugin: 'maven'



buildscript {
	ext {
		springBootVersion = '1.4.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}



jar {
	baseName = 'rfsc-cloud-config-server'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	mavenLocal()
	jcenter()
}


dependencies {

	compile('org.springframework.security:spring-security-ldap')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.cloud:spring-cloud-config-server')
	compile('org.springframework.cloud:spring-cloud-starter-oauth2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	compile('net.logstash.logback:logstash-logback-encoder:4.11')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:Brixton.SR5"
	}
}

docker {
	baseImage("java:8")
	maintainer("Redbee")
}


task wrapper(type: Wrapper) {
	gradleVersion = '2.10'
}

if (!project.hasProperty("dockerTag")) {
    ext.dockerTag = "latest"
}
//START Build docker image
task buildDocker(type: Docker, dependsOn: build) {
	baseImage = "anapsix/alpine-java:8"
	maintainer = "RFSC"
	hostUrl = "https://docker.dev.redbee.io"
	push = true
	dryRun = false
	tagVersion = "${dockerTag}"
	tag = "docker.dev.redbee.io/${jar.baseName}"
	addFile {
		from jar
		rename { "${jar.baseName}.jar"}
	}

	entryPoint(
			[
					"java",
					"-Djava.security.egd=file:/dev/./urandom",
					"-jar",
					"/${jar.baseName}.jar"
			]
	)
}




