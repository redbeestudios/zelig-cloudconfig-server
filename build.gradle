apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'
apply plugin: 'maven'
//apply plugin: 'com.gorylenko.gradle-git-properties'

group = 'com.rfsc.cloud.config'
version = '1.0.0'


buildscript {
	ext {
		springBootVersion = '2.0.0.RC1'
	}
	repositories {
		mavenLocal()
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE")
		classpath('se.transmode.gradle:gradle-docker:1.2')
        // Genera informacion de git para endpoint info
        classpath 'gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.20'
	}
}


jar {
	baseName = 'rfsc-ofertador-cloud-config-server'
	version = version
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


dependencies {

    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.cloud:spring-cloud-config-server')
	testCompile('org.springframework.boot:spring-boot-starter-test')
  	compile('ch.qos.logback:logback-core:1.1.8')
	compile('net.logstash.logback:logstash-logback-encoder:4.11')
    compileOnly ('org.projectlombok:lombok')
}

compileJava.dependsOn(processResources)

ext {
	springCloudVersion = 'Finchley.M5'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

docker {
	baseImage("java:8")
	maintainer("Redbee")
}

// Genera informacion del build para endpoint info
springBoot {
    buildInfo()
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.2.1'
}

////START Build docker image
if (!project.hasProperty("dockerImgName")) {
    ext.dockerImgName = "${jar.baseName}"
}
if (!project.hasProperty("dockerTag")) {
    ext.dockerTag = "latest"
}
if (!project.hasProperty("dockerRegistry")) {
    ext.dockerRegistry = "registryrfsc.azurecr.io"
}
if (!project.hasProperty("dockerPushToRegistry")) {
    ext.dockerPushToRegistry = true
}
task buildDocker(type: Docker, dependsOn: build) {
    baseImage = "frolvlad/alpine-java"
    maintainer = "RFSC"
    hostUrl = "https://registryrfsc.azurecr.io"
    push = dockerPushToRegistry.toBoolean()
    dryRun = false
    tagVersion = "${dockerTag}"
    tag = "${dockerRegistry}/${dockerImgName}"
    addFile {
        from bootJar
        rename { "${dockerImgName}.jar" }
    }
    addFile("./java-entrypoint.sh", "/java-entrypoint.sh")
    exposePort(8080)

    entryPoint([
        "/java-entrypoint.sh",
        "/${dockerImgName}.jar"
    ])
}

bootRun {
	jvmArgs = ["-Djava.security.egd=file:/dev/./urandom", "-Dspring.profiles.active=local"]
}




